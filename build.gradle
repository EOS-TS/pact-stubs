plugins {
    id 'java-library'
    id 'java'
    id 'maven-publish'
    id 'signing'
    id "io.codearte.nexus-staging" version "0.30.0"
    id "com.github.hierynomus.license" version "0.16.1"
}

group = 'de.eosts'
version = '3.0.0'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

ext {
    pactVersion = '4.2.20'
    wireMockVersion = '2.32.0'
}

dependencies {
    api "com.github.tomakehurst:wiremock-jre8:${wireMockVersion}"
    api "au.com.dius.pact:provider:${pactVersion}"
    api "au.com.dius.pact.core:model:${pactVersion}"

    implementation("org.jetbrains.kotlin:kotlin-reflect:1.6.0") {
        because("required to instantiate PactBrokerLoader")
    }
    implementation('org.json:json:20211205') {
        because("relying only on the transitive dependency of au.com.dius.pact:consumer results in cannot access JSONObject")
    }

    testImplementation "au.com.dius.pact:consumer:${pactVersion}"
    testImplementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.1"
    testImplementation 'junit:junit:4.13.2'
}

repositories {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    withJavadocJar()
    withSourcesJar()
}

wrapper {
    gradleVersion = '7.2'
}

license {
    header = file('HEADER')
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ext.name = 'EOS Technology Solutions GmbH'
    skipExistingHeaders = true
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'pact-stubs'
            from components.java
            pom {
                name = 'Pact Stubs'
                description = 'Generate Stubs from Pacts for WireMock and Messaging'
                url = 'https://github.com/EOS-TS/pact-stubs'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'cmuelhau'
                        name = 'Christian Muelhaupt'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/EOS-TS/pact-stubs.git'
                    developerConnection = 'scm:git:git@github.com:EOS-TS/pact-stubs.git'
                    url = 'https://github.com/EOS-TS/pact-stubs'
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username nexusUsername
                password nexusPassword
            }
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
            url = isReleaseVersion ? releasesRepoUrl : snapshotsRepoUrl
        }
    }
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("publish") }
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}
